# Parameters of the Seq2Seq Model

# Device-sensitive parameters
amr_data_dir: &amr_data_dir data/all_amr
glove: &glove /home/sheng/data/glove/glove.840B.300d.zip


# Model parameters
model:
  model_type: Seq2Seq

  encoder_token_embedding:
    num_embeddings:
    vocab_namespace: 'encoder_tokens'
    embedding_dim: 300
    dropout: 0.33
    pretrained_file:

  encoder_char_embedding:
    num_embeddings:
    vocab_namespace: 'encoder_chars'
    embedding_dim: 100
    dropout: 0.33
    pretrained_file:
  decoder_token_embedding:
    num_embeddings:
    vocab_namespace: 'decoder_tokens'
    embedding_dim: 300
    dropout: 0.33
    pretrained_file:

  decoder_char_embedding:
    num_embeddings:
    vocab_namespace: 'decoder_chars'
    embedding_dim: 100
    dropout: 0.33
    pretrained_file:

  encoder:
    input_size: 400
    hidden_size: 512
    num_layers: 3
    dropout: 0.33

  decoder:
    input_size: 400
    hidden_size: &deocder_hidden_size 1024
    num_layers: 3
    dropout: 0.33

  generator:
    input_size: *deocder_hidden_size
    # Specify vocab_size and pad_idx dynamically
    vocab_size:
    pad_idx:


# Data parameters
data:
  data_dir: *amr_data_dir
  train_data: train_amr.txt
  dev_data: dev_amr.txt
  test_data: test_amr.txt
  data_type: AMR
  batch_first: True
  train_batch_size: &train_batch_size 64
  test_batch_size: 32
  iter_type: BucketIterator
  pretrain_token_emb: *glove
  pretrain_char_emb:


# Training parameters
environment:
  recover: False
  seed: 1
  numpy_seed: 1
  torch_seed: 1
  serialization_dir: &serialization_dir ckpt
  file_friendly_logging: False
  gpu: True
  cuda_device: 0

trainer:
  device: # No need to be specified, will be updated at runtime
  # Optimizer
  no_grad: []
  optimizer_type: adam
  learning_rate: 0.001
  max_grad_norm: 5.0
  batch_size: *train_batch_size
  shuffle: True
  epochs: 20
  dev_metric: ppl
  serialization_dir: *serialization_dir
  model_save_interval:

test:
  evaluate_on_test: True
