# Parameters for the deep biaffine parser.

# Device-sensitive parameters
amr_data_dir: &amr_data_dir data/all_amr
glove: &glove /home/sheng/data/glove/glove.840B.300d.zip

# Model parameters
model:
  model_type: DeepBiaffineParser
  use_char_conv: True
  # Embeddings
  token_embedding:
    embedding_dim: 300
    pretrained_file: *glove
    vocab_namespace: 'decoder_token_ids'
    data_type: &data_type AMR
    dropout: 0.33
  character_embedding:
    embedding_dim: 100
    pretrained_file:
    vocab_namespace: 'decoder_token_characters'
    data_type: AMR
  character_CNN:
    embedding_dim: 100
    num_filters: 100
    kernel_size: 3
  encoder:
    hidden_size: 512
    num_layers: 3
    dropout: 0.33
  edge_hidden_size: 512
  label_hidden_size: 128
  decode_type: greedy

# Data parameters
data:
  data_dir: *amr_data_dir
  train_data: train_amr.txt
  dev_data: dev_amr.txt
  test_data: test_amr.txt
  data_type: AMR
  batch_first: True
  train_batch_size: &train_batch_size 64
  test_batch_size: 32
  iter_type: BucketIterator
  pretrain_token_emb: *glove
  pretrain_char_emb:

# Training parameters
environment:
  recover: False
  seed: 1
  numpy_seed: 1
  torch_seed: 1
  serialization_dir: &serialization_dir biaffine-ckpt
  file_friendly_logging: False
  gpu: True
  cuda_device: 0

trainer:
  device: # No need to be specified, will be updated at runtime
  # Optimizer
  no_grad: []
  optimizer_type: adam
  learning_rate: 0.001
  max_grad_norm: 5.0
  batch_size: *train_batch_size
  shuffle: True
  epochs: 20
  dev_metric: loss
  serialization_dir: *serialization_dir
  model_save_interval:

test:
  evaluate_on_test: True
