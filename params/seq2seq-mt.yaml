# Parameters of the Seq2Seq Model

# Device-sensitive parameters
amr_data_dir: &amr_data_dir /home/xma/projects/stog/experiments/data/all_amr
mt_data_dir: &mt_data_dir /export/ssd/xma/data/all_mt
glove: &glove /home/xma/projects/stog/experiments/data/glove.840B.300d.txt


# Model parameters
model:
  model_type: Seq2Seq
  use_char_cnn: False

  encoder_token_embedding:
    num_embeddings:
    vocab_namespace: 'encoder_token_ids'
    embedding_dim: 300
    padding_index: 0
    dropout: 0.33
    #    pretrained_file: *glove

  encoder_char_embedding:
    num_embeddings:
    vocab_namespace: 'encoder_token_characters'
    embedding_dim: &encoder_char_embedding_dim 100
    padding_index: 0
    dropout: 0.33
    pretrained_file:

  encoder_char_cnn:
    embedding_dim: *encoder_char_embedding_dim
    num_filters: 100
    ngram_filter_sizes: [3]

  decoder_token_embedding:
    num_embeddings:
    vocab_namespace: 'decoder_token_ids'
    embedding_dim: 300
    padding_index: 0
    dropout: 0.33
    #pretrained_file: *glove

  decoder_char_embedding:
    num_embeddings:
    vocab_namespace: 'decoder_token_characters'
    embedding_dim: &decoder_char_embedding_dim 100
    padding_index: 0
    dropout: 0.33
    pretrained_file:

  decoder_char_cnn:
    embedding_dim: *decoder_char_embedding_dim
    num_filters: 100
    ngram_filter_sizes: [3]

  encoder:
    input_size: 300
    hidden_size: 512
    num_layers: 2
    use_highway: False
    dropout: 0.33

  decoder:
    input_size: 1324
    hidden_size: &deocder_hidden_size 1024
    num_layers: 2
    use_highway: False
    dropout: 0.33

  attention:
    add_linear: True

  generator:
    input_size: *deocder_hidden_size
    # Specify vocab_size and pad_idx dynamically
    vocab_size:
    pad_idx:


# Data parameters
data:
  data_dir: *mt_data_dir
  train_data: train_mt.txt
  dev_data: valid_mt.txt
  test_data: test_mt.txt
  data_type: MT
  batch_first: True
  train_batch_size: &train_batch_size 50
  test_batch_size: 32
  iter_type: BucketIterator
  #pretrain_token_emb: *glove
  pretrain_char_emb:


# Training parameters
environment:
  recover: False
  seed: 1
  numpy_seed: 1
  torch_seed: 1
  serialization_dir: &serialization_dir mt-ckpt
  file_friendly_logging: False
  gpu: True
  cuda_device: 0

trainer:
  device: # No need to be specified, will be updated at runtime
  # Optimizer
  no_grad: []
  optimizer_type: adam
  learning_rate: 0.001
  max_grad_norm: 5.0
  batch_size: *train_batch_size
  shuffle: True
  epochs: 50
  dev_metric: ppl
  serialization_dir: *serialization_dir
  model_save_interval:

test:
  evaluate_on_test: True
